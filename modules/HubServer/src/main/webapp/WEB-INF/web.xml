<?xml version="1.0" encoding="UTF-8"?>

<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	metadata-complete="false">
	 <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> 
		</listener>
		<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/classes/applicationContext.xml</param-value>
</context-param>

<listener>
   <listener-class>
        org.springframework.web.context.ContextLoaderListener
   </listener-class>
</listener> 
	<!-- <listener> <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class> 
		</listener> -->
	<!-- <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>com.pigdroid.web.app.ApplicationInitializer,
		com.pigdroid.web.app.ServiceConfiguration,
		com.pigdroid.web.app.DAOConfiguration</param-value>
	</context-param>
 -->
<!-- 	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextClass</param-name>
		<param-value>
          org.springframework.web.context.support.AnnotationConfigWebApplicationContext
      </param-value>
	</context-param> -->
	
	
	
	
	
	<!-- Atmosphere -->
<servlet>
		<description>AtmosphereServlet</description>
		<servlet-name>AtmosphereServlet</servlet-name>
		<servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>

		<init-param>
			<param-name>org.atmosphere.cpr.broadcasterLifeCyclePolicy</param-name>
			<param-value>EMPTY_DESTROY</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.cpr.broadcaster.shareableThreadPool</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.cpr.recoverFromDestroyedBroadcaster</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.websocket.messageContentType</param-name>
			<param-value>application/json</param-value>
		</init-param>
		
				    <init-param>
        <param-name>org.atmosphere.disableOnStateEvent</param-name>
        <param-value>true</param-value>
    </init-param>
		
		<!-- Uncomment to track message size delivery <init-param> <param-name>org.atmosphere.cpr.broadcastFilterClasses</param-name> 
			<param-value>org.atmosphere.client.TrackMessageSizeFilter</param-value> </init-param> -->
		<!-- Uncomment to use Redis <init-param> <param-name>org.atmosphere.cpr.broadcasterClassName</param-name> 
			<param-value>org.atmosphere.plugin.org.atmosphere.plugin.redis.RedisBroadcaster</param-value> 
			</init-param> -->
    
		<load-on-startup>0</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>AtmosphereServlet</servlet-name>
		<url-pattern>/msg/*</url-pattern>
	</servlet-mapping>
	    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
         
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
	
</web-app>

